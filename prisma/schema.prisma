generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id @default(cuid())
  sid       String   @unique
  data      String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id              Int      @id @default(autoincrement())
  username        String   @unique
  email           String   @unique
  password        String
  restaurantName  String
  products        Product[] @relation("UserProducts") // Renamed for clarity
  tables          Table[]
}

model Order {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  userId       Int
  tableId      Int
  table        Table       @relation(fields: [tableId], references: [id])
  orderItems   OrderItem[] // New relation with OrderItem to track products and quantities
}

model Product {
  id           Int         @id @default(autoincrement())
  imageUrl     String
  title        String
  description  String
  price        Float
  available    Boolean     @default(true)
  userId       Int
  user         User        @relation("UserProducts", fields: [userId], references: [id])
  orderItems   OrderItem[] // New relation with OrderItem to track orders
}

model OrderItem {
  id           Int         @id @default(autoincrement())
  orderId      Int
  productId    Int
  quantity     Int         @default(1)
  order        Order       @relation(fields: [orderId], references: [id])
  product      Product     @relation(fields: [productId], references: [id])
}


model Table {
  id       Int     @id @default(autoincrement())
  number   Int
  userId   Int
  user     User    @relation(fields: [userId], references: [id])
  orders   Order[]
}


